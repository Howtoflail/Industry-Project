// <auto-generated />
using System;
using KindRegardsApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KindRegardsApi.Data.Migrations
{
//    [DbContext(typeof(ApplicationDbContext))]
//    [Migration("20220613221803_Whitelist")]
//    partial class Whitelist
//    {
//        protected override void BuildTargetModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("ProductVersion", "6.0.5")
//                .HasAnnotation("Relational:MaxIdentifierLength", 64);

//            modelBuilder.Entity("KindRegardsApi.Entity.Messages.GiftEntity", b =>
//                {
//                    b.Property<long>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("bigint");

//                    b.Property<long>("StickerId")
//                        .HasColumnType("bigint");

//                    b.HasKey("Id");

//                    b.ToTable("Gifts");
//                });

//            modelBuilder.Entity("KindRegardsApi.Entity.Messages.MessageEntity", b =>
//                {
//                    b.Property<long>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("bigint");

//                    b.Property<DateTime>("Date")
//                        .HasColumnType("datetime(6)");

//                    b.Property<string>("DeviceId")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<long?>("GiftId")
//                        .HasColumnType("bigint");

//                    b.Property<bool>("Read")
//                        .HasColumnType("tinyint(1)");

//                    b.Property<string>("Text")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<bool>("Thanked")
//                        .HasColumnType("tinyint(1)");

//                    b.HasKey("Id");

//                    b.HasIndex("GiftId");

//                    b.ToTable("Messages");
//                });

//            modelBuilder.Entity("KindRegardsApi.Entity.Messages.WhitelistItemEntity", b =>
//                {
//                    b.Property<long>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("bigint");

//                    b.Property<string>("Text")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.HasKey("Id");

//                    b.ToTable("Whitelist");
//                });

//            modelBuilder.Entity("KindRegardsApi.Entity.Stickers.DeviceStickerEntity", b =>
//                {
//                    b.Property<long>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("bigint");

//                    b.Property<int>("Amount")
//                        .HasColumnType("int");

//                    b.Property<string>("DeviceId")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.Property<long?>("StickerId")
//                        .HasColumnType("bigint");

//                    b.HasKey("Id");

//                    b.HasIndex("StickerId");

//                    b.ToTable("DeviceStickers");
//                });

//            modelBuilder.Entity("KindRegardsApi.Entity.Stickers.StickerEntity", b =>
//                {
//                    b.Property<long>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("bigint");

//                    b.Property<string>("Image")
//                        .IsRequired()
//                        .HasColumnType("longtext");

//                    b.HasKey("Id");

//                    b.ToTable("Stickers");
//                });

//            modelBuilder.Entity("KindRegardsApi.Entity.Messages.MessageEntity", b =>
//                {
//                    b.HasOne("KindRegardsApi.Entity.Messages.GiftEntity", "Gift")
//                        .WithMany()
//                        .HasForeignKey("GiftId");

//                    b.Navigation("Gift");
//                });

//            modelBuilder.Entity("KindRegardsApi.Entity.Stickers.DeviceStickerEntity", b =>
//                {
//                    b.HasOne("KindRegardsApi.Entity.Stickers.StickerEntity", "Sticker")
//                        .WithMany()
//                        .HasForeignKey("StickerId")
//                        .OnDelete(DeleteBehavior.Cascade);

//                    b.Navigation("Sticker");
//                });
//#pragma warning restore 612, 618
//        }
  //  }
}
